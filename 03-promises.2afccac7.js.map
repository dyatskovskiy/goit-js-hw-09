{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,WAGA,IAAMC,EAAYC,SAASC,cAAc,kBACnCC,EAAkBF,SAASC,cAAc,qBACzCE,EAAiBH,SAASC,cAAc,oBACxCG,EAAcJ,SAASC,cAAc,sBAE3CF,EAAUM,iBAAiB,SAAS,SAAAC,G,kBAQhC,IAAIC,EAAQC,EAAYC,EAExBC,YAAW,WACTC,EAAcF,EAAUF,GACrBK,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBlB,EAAAmB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,IAE9DI,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBlB,EAAAmB,OAAOI,QAAQ,sBAAuCF,OAAfJ,EAAS,QAAYI,OAANH,EAAM,M,MAE/DM,E,EAjBLf,EAAEgB,iBAMF,IAJA,IAAMC,EAASC,SAASpB,EAAYqB,OAC9BjB,EAAYgB,SAASrB,EAAesB,OACpCJ,EAAaG,SAAStB,EAAgBuB,OAEnCC,EAAW,EAAGA,GAAYH,EAAQG,IAAUC,EAAAD,E,IAevD,IAAMf,EAAgB,SAACG,EAAUC,GAC/B,OAAO,IAAIa,SAAQ,SAACC,EAASC,GAC3BpB,YAAW,WACaqB,KAAKC,SAAW,IAGpCH,EAAQ,CAAEf,WAAUC,UAGtBe,EAAO,CAAEhB,WAAUC,S,GAClBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-notify-aio-3.2.6.min.js';\n\nconst createBtn = document.querySelector('.form > button');\nconst firstDelayInput = document.querySelector('input[name=delay]');\nconst delayStepInput = document.querySelector('input[name=step]');\nconst amountInput = document.querySelector('input[name=amount]');\n\ncreateBtn.addEventListener('click', e => {\n  e.preventDefault();\n\n  const amount = parseInt(amountInput.value);\n  const delayStep = parseInt(delayStepInput.value);\n  const firstDelay = parseInt(firstDelayInput.value);\n\n  for (let position = 1; position <= amount; position++) {\n    let delay = delayStep * position;\n\n    setTimeout(() => {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, firstDelay);\n  }\n});\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n\n      reject({ position, delay });\n    }, delay);\n  });\n};\n// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\n// Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createBtn","document","querySelector","$ce04d3a99e08e73b$var$firstDelayInput","$ce04d3a99e08e73b$var$delayStepInput","$ce04d3a99e08e73b$var$amountInput","addEventListener","e","delay1","delayStep","position1","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","param","position","delay","Notify","success","concat","catch","failure","firstDelay","preventDefault","amount","parseInt","value","position11","_loop","Promise","resolve","reject","Math","random"],"version":3,"file":"03-promises.2afccac7.js.map"}